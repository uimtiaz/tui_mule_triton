<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey" xmlns:jdbc="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="EE-3.3.0" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd 
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd 
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd 
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd 
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd ">
    <flow name="MAIN_flow" doc:name="MAIN_flow">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" path="api" doc:name="HTTP"/>
        <logger message="QUERY PARAMS: #[headers:INBOUND:*]" level="INFO" doc:name="QRY Params Logger"/>
        <logger message="INBOUND PAYLOAD: #[payload:]" level="INFO" doc:name="1st Logger"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[// ignore the first /
// and split by / the rest of the message
msgArr = payload[1..-1].split('/')
println 'msgArr: ' + msgArr

// msgArr[0] should always contain: 'api'
if (msgArr[0]=='api') {
	message.setSessionProperty('API-VALID', true)
    // Error handling: test that msgArr[n] is not null
	message.setSessionProperty('API-CLASS', msgArr[1])
	message.setSessionProperty('API-METHOD', msgArr[2]) 
	message.setSessionProperty('API-METHOD-ARGS', msgArr[3])
	// remove /api/ at the front of the message
	return payload[5..-1]
}
else {
    // this is not a proper api invocation
	// set FALSE to ISVALID message property
	message.setSessionProperty('IS-VALID', false)
	message.setSessionProperty('API-CLASS', null)
	message.setSessionProperty('API-METHOD', null) 
	message.setSessionProperty('API-METHOD-ARGS', null)
    return  payload
}]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <logger message="INBOUND AFTER GROOVY: #[payload:]; API-VALID: #[groovy:message.getSessionProperty('API-VALID')];API-CLASS: #[groovy:message.getSessionProperty('API-CLASS')]; API-METHOD: #[groovy:message.getSessionProperty('API-METHOD')]; API-METHOD-ARGS: #[groovy:message.getSessionProperty('API-METHOD-ARGS')]" level="INFO" doc:name="2nd Logger"/>
        <expression-transformer expression="#[header:session:API-METHOD-ARGS]" doc:name="Expression"/>
        <choice doc:name="Choice">
            <when expression="sessionVars['API-CLASS']=='STATUS'">
                <processor-chain>
                    <vm:outbound-endpoint exchange-pattern="request-response" path="STATUS" responseTimeout="10000" mimeType="text/plain" doc:name="Class_STATUS"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-CLASS']=='LOGIN'">
                <processor-chain>
                    <vm:outbound-endpoint exchange-pattern="request-response" path="LOGIN" responseTimeout="10000" mimeType="text/plain" doc:name="Class_LOGIN"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-CLASS']=='SEARCH'">
                <processor-chain>
                    <vm:outbound-endpoint exchange-pattern="request-response" path="SEARCH" responseTimeout="10000" mimeType="text/plain" doc:name="Class_SEARCH"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-CLASS']=='BOOKING'">
                <processor-chain>
                    <vm:outbound-endpoint exchange-pattern="request-response" path="BOOKING" responseTimeout="10000" mimeType="text/plain" doc:name="Class_BOOKING"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-CLASS']=='PROFILE'">
                <processor-chain>
                    <vm:outbound-endpoint exchange-pattern="request-response" path="PROFILE" responseTimeout="10000" mimeType="text/plain" doc:name="Class_PROFILE"/>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <logger message="In Main Flow, INVALID CLASS Name: #[groovy:message.getSessionProperty('API-CLASS')]" level="INFO" doc:name="Logger"/>
                    <vm:outbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="DLQ"/>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
    <flow name="DeadLetterQueue_flow" doc:name="DeadLetterQueue_flow">
        <vm:inbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="VM"/>
        <logger message="Inside DLQ flow: #[payload:]" level="INFO" doc:name="Logger"/>
        <file:outbound-endpoint path="/Users/stephanerata/MuleStudio/workspace/.mule" responseTimeout="10000" doc:name="File-DLQ"/>
    </flow>
    <flow name="Class_STATUS_flow" doc:name="Class_STATUS_flow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="STATUS" responseTimeout="10000" mimeType="text/plain" doc:name="VM"/>
        <logger message="In STATUS flow: #[payload:]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="sessionVars['API-METHOD']=='GetStatus'">
                <processor-chain>
                    <scripting:transformer doc:name="Remove Args">
                        <scripting:script engine="Groovy">
                            <scripting:text><![CDATA[return null]]></scripting:text>
                        </scripting:script>
                    </scripting:transformer>
                    <logger message="INVOKING SETUP.GetStatus with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLAS400.PGM" contentType="text/html" doc:name="STATUS.GetStatus"/>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <logger message="In STATUS CLASS Flow, INVALID METHOD Name: #[groovy:message.getSessionProperty('API-METHOD')]" level="INFO" doc:name="Logger"/>
                    <vm:outbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="VM-DLQ"/>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
    <flow name="Class_LOGIN_flow" doc:name="Class_LOGIN_flow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="LOGIN" responseTimeout="10000" mimeType="text/plain" doc:name="VM"/>
        <logger message="In LOGIN flow: #[payload:]" level="INFO" doc:name="Logger"/>
        <expression-transformer expression="#[header:session:API-METHOD-ARGS]" doc:name="OnlyArgsAsPayload"/>
        <choice doc:name="Choice">
            <when expression="sessionVars['API-METHOD']=='AuthenticateBroker'">
                <processor-chain>
                    <logger message="INVOKING LOGIN.AuthenticateBroker with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLBRKVLD.PGM/#[payload:]" contentType="text/html" doc:name="LOGIN.AuthenticateBroker"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='AuthenticateUser'">
                <processor-chain>
                    <logger message="INVOKING LOGIN.AuthenticateUser with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLUSERDV1.PGM/#[payload:]" contentType="text/html" doc:name="LOGIN.AuthenticateUser"/>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <logger message="In LOGIN CLASS Flow, INVALID METHOD Name: #[groovy:message.getSessionProperty('API-METHOD')]" level="INFO" doc:name="Logger"/>
                    <vm:outbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="VM-DLQ"/>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
    <flow name="Class_SEARCH_flow" doc:name="Class_SEARCH_flow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="SEARCH" responseTimeout="10000" mimeType="text/plain" doc:name="VM"/>
        <logger message="In SEARCH flow: #[payload:]" level="INFO" doc:name="Logger"/>
        <expression-transformer expression="#[header:session:API-METHOD-ARGS]" doc:name="OnlyArgsAsPayload"/>
        <choice doc:name="Choice">
            <when expression="sessionVars['API-METHOD']=='GetBases'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.GetBases with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/xmlbases.pgm/#[payload:]" encoding="UTF-8" mimeType="text/xml" doc:name="SEARCH.GetBases"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetBoats'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.GetBoats with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLFULLST.pgm/#[payload:]" encoding="UTF-8" mimeType="text/xml" doc:name="SEARCH.GetBoats"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetContractHistory'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.ContractHistory with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLHSCLNV1.pgm/#[payload:]" doc:name="SEARCH.GetContractHistory"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetAvailBoats'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.GetAvailBoats with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLTYPESV1.pgm/#[payload:]" doc:name="SEARCH.GetAvailBoats"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetRate'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.GetRate with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLPARMSV1.pgm/#[payload:]" doc:name="SEARCH.GetRate"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetFlightRoute'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.GetFlightRoute with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1093/findform1/XMLROUTE.pgm/#[payload:]" doc:name="SEARCH.GetFlightRoute" doc:description="for SUNSAIL only, port is 1093"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetFlight'">
                <processor-chain>
                    <logger message="INVOKING SEARCH.GetFlight with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLFLAVL.pgm/#[payload:]" doc:name="SEARCH.GetFlight" doc:description="for SUNSAIL only port is 1093"/>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <logger message="In SEARCH CLASS Flow, INVALID METHOD Name: #[groovy:message.getSessionProperty('API-METHOD')]" level="INFO" doc:name="Logger"/>
                    <vm:outbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="VM-DLQ"/>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
    <flow name="Class_BOOKING_flow" doc:name="Class_BOOKING_flow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="BOOKING" responseTimeout="10000" mimeType="text/plain" doc:name="VM"/>
        <logger message="In BOOKING flow: #[payload:]" level="INFO" doc:name="Logger"/>
        <expression-transformer expression="#[header:session:API-METHOD-ARGS]" doc:name="OnlyArgsAsPayload"/>
        <choice doc:name="Choice">
            <when expression="sessionVars['API-METHOD']=='CreateQuote'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.CreateQuote with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/xmlquotev1.pgm/#[payload:]" encoding="UTF-8" mimeType="text/xml" doc:name="BOOKING.CreateQuote"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetQuoteHistorySaved'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetQuoteHistorySaved with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLQTCLNV1.pgm/#[payload:]" encoding="UTF-8" mimeType="text/xml" doc:name="BOOKING.GetQuoteHistorySaved"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetQuoteHistory'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetQuoteHistory with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLQCCLN.pgm/#[payload:]" doc:name="BOOKING.GetQuoteHistory"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetQuote'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetQuote with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLQTENQV1.pgm/#[payload:]" doc:name="BOOKING.GetQuote"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetCallCenterQuote'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetCallCenterQuote with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLCCENQ.pgm/#[payload:]" doc:name="BOOKING.GetCallCenterQuote"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetContractQuote'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetContractQuote with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLCNTENQV1.pgm/#[payload:]" doc:name="BOOKING.GetContractQuote"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='SaveQuote'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.SaveQuote with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLQTSAV.pgm/#[payload:]" doc:name="BOOKING.SaveQuote"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetPrices'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetPrices with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLPARMSV1.pgm/#[payload:]" doc:name="BOOKING.GetPrices"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetInsurPackages'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetInsurPackages with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLINSUR.pgm/#[payload:]" doc:name="BOOKING.GetInsurPackages"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='GetAncillaryProducts'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.GetAncillaryProducts with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLPRODSV1.pgm/#[payload:]" doc:name="BOOKING.GetAncillaryProducts"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='AddFlightPassenger'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.AddFlightPassenger with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLPAINFO.pgm/#[payload:]" doc:name="BOOKING.AddFlightPassenger"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='CreateOption'">
                <processor-chain>
                    <logger message="INVOKING BOOKING.CreateOption with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1092/findform1/XMLBRKOP.pgm/#[payload:]" doc:name="BOOKING.CreateOption"/>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <logger message="In BOOKING CLASS Flow, INVALID METHOD Name: #[groovy:message.getSessionProperty('API-METHOD')]" level="INFO" doc:name="Logger"/>
                    <vm:outbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="VM-DLQ"/>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
    <flow name="Class_PROFILE_flow" doc:name="Class_PROFILE_flow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="PROFILE" responseTimeout="10000" mimeType="text/plain" doc:name="VM"/>
        <logger message="In PROFILE flow: #[payload:]" level="INFO" doc:name="Logger"/>
        <expression-transformer expression="#[header:session:API-METHOD-ARGS]" doc:name="OnlyArgsAsPayload"/>
        <choice doc:name="Choice">
            <when expression="sessionVars['API-METHOD']=='UpdateUserProfile'">
                <processor-chain>
                    <logger message="INVOKING PROFILE.UpdateUserProfile with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLCUSERV1.pgm/#[payload:]" encoding="UTF-8" mimeType="text/xml" doc:name="PROFILE.UpdateUserProfile"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='CreateUserProfile'">
                <processor-chain>
                    <logger message="INVOKING PROFILE.CreateUserProfile with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLNUSERV1.pgm/#[payload:]" encoding="UTF-8" mimeType="text/xml" doc:name="PROFILE.CreateUserProfile"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='ChangeUserPassword'">
                <processor-chain>
                    <logger message="INVOKING PROFILE.ChangeUserPassword with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLPWCHG.pgm/#[payload:]" doc:name="PROFILE.ChangeUserPassword"/>
                </processor-chain>
            </when>
            <when expression="sessionVars['API-METHOD']=='RetrieveUserPassword'">
                <processor-chain>
                    <logger message="INVOKING PROFILE.RetrieveUserPassword with ARGS: #[payload:]" level="INFO" doc:name="Logger"/>
                    <http:outbound-endpoint exchange-pattern="request-response" method="GET" address="http://192.168.1.2:1091/findform1/XMLPWORDV1.pgm/#[payload:]" doc:name="PROFILE.RetrieveUserPassword"/>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <logger message="In SEARCH PROFILE Flow, INVALID METHOD Name: #[groovy:message.getSessionProperty('API-METHOD')]" level="INFO" doc:name="Logger"/>
                    <vm:outbound-endpoint exchange-pattern="one-way" path="DLQ" responseTimeout="10000" mimeType="text/plain" doc:name="VM-DLQ"/>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
</mule>
